//判断两棵树是否相同，用递归，
//判断左子树和右子树是否相同
//这题我还有一个想法是用中序遍历，然后像判断字符串相等那样判断两棵树是否相等，KMP算法的一个应用
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public boolean isSameTree(TreeNode p, TreeNode q) {
	    	if (p == null && q == null) {    //左子树为空且右子树为空，这时返回true，为递归出口
	    		return true;                   //返回true
	    	} else if (p == null || q == null) {    //左子树或右子树不为空， 这是肯定有一颗且只有一棵树为空，因为同时为空已经返回
	    		return false;                         //这时返回false
	    	} else if (p.val == q.val) {            //左子树不为空且右子树不为空，同时结点值相等，
	    		return isSameTree(p.left, q.left) && isSameTree(p.right, q.right);        //递归判断该节点左子树和右子树是否相等
	    	} else {
	    		return false;                         //结点值不相等，返回false
	    	}
	    }
}
