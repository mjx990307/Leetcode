//典型的动态规划的题
//先把最上边一行的路径和最右边一行的路径确定
//最上边一行只能往右走，所以路径都是1
//最左边一行只能往下走，路径都是1
//别的点都是上边一个的路径总和加上左边一点的路径总和就是到这一点的路径总和


class Solution {
    public int uniquePaths(int m, int n) {
    	int[][] dp = new int[n][m];
        for (int i = 0; i < n; i++) {                                   //初始化第一行的路径总和，都为1
            dp[i][0] = 1;
        }
        for (int i = 0; i < m; i++) {                                   //初始化最左边一列的路径总和，设为1
            dp[0][i] = 1;
        }
    	for (int i = 1; i < n; i++) {                                     //遍历其他的点
    		for (int j = 1; j < m; j++) {
    			dp[i][j] = dp[i - 1][j] + dp[i][j - 1];                       //状态转移方程
    		}
    	}
    	return dp[n-1][m-1];                                              //返回到最后一个点的路径总和
    }
}
