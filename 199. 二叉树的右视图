//这道题层序遍历就好
//把每层遍历到的第一个结点放到结果集中
//遍历的时候先遍历右结点，再遍历左结点


/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<Integer> rightSideView(TreeNode root) {
		Queue<TreeNode> queue = new LinkedList<>();                                         //创建队列
        List<Integer> list = new ArrayList<>();                                         //创建结果集
        if (root == null) {                                                             //如果根节点为空，则返回空集合
            return list;
        }
		queue.add(root);
		while (!queue.isEmpty()) {
			int len = queue.size();                                 
			for (int i = 0; i < len; i++) {           
                TreeNode cur = queue.poll();                                            //弹出结点
                if (i == 0) {                                                           //如果是第一个结点，就加入到结果集中
                    list.add(cur.val);
                }
				
				if (cur.right != null) {                                                        //先将右结点加入到队列中
					queue.add(cur.right);
				}
				if (cur.left != null) {                                                         //再将左结点加入到队列中
					queue.add(cur.left);
				}
			}
		}
		return list;                                                                        //返回结果集
	}
}
