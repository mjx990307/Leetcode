//解法一 暴力法
class Solution {
    public int maxProfit(int[] prices) {
		int max = 0;
		for (int i = 0; i < prices.length; i++) {
			for (int j = i + 1; j < prices.length; j++) {
				if (prices[j] - prices[i] > max) {
					max = prices[j] - prices[i];
				}
			}
		}
		return max;
    }
}

//解法二 一次遍历
class Solution {
    public int maxProfit(int[] prices) {
		int min = Integer.MAX_VALUE;
		int max = 0;
		for (int i = 0; i < prices.length; i++) {
			if (prices[i] < min) {
				min = prices[i];
			} else {
				max = Math.max(max, prices[i] - min);
			}
		}
		return max;
    }
}

//解法三 动态规划
public int maxProfit(int[] prices) {
		int max = 0, min = Integer.MAX_VALUE;
		for (int i = 0; i < prices.length; i++) {
		    max = Math.max(max, prices[i] - min);
			  min = Math.min(prices[i], min);
		}
		return max;
}
